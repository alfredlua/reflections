# When would you want to use a remote repository rather than keeping all your work local?

I would do that when the project is one where I work with other people and when I might be using different computers to work on the project. 

# Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

That's because I might be working on something locally and automatically updating could make something that is not ready public.

# Describe the differences between forks, clones, and branches. When would you use one instead of another?

Forks are for cloning a project from GitHub to GitHub
Clones are for copying a project from GitHub to local or local to local.
Branches are for adding a new commit to a git locally. 

# What is the benefit of having a copy of the last known state of the remote stored locally?

So that I can copy my local version with the remote even when I'm offline.

# How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

I could use file sharing applications but that could be messy.
Also, some applications don't save my revision history or cannot work offline.
I guess merging would be challenging, too. 

# When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

I'll make changes in a separate branch when I'm experimenting with an idea or when I want someone else to check my work before merging
it with the master branch.
This way, things are clearer and my teammates can look at my pull request and give feedback. If I add to the master branch directly,
I won't be able to get the feedback or comments.

Commands:

git remote  |    Show all remote locations for the repository
git remote add origin url |     Add a new remote location for the repository. Origin is the default name to use when you create only one remote location. Url should be the https url to the github repository.
git remove -v  |    Outputs the remote locations with verbose information (fetch and push urls)
git push origin master  |    Push the master branch to the remote location origin.
git pull origin master  |    Get the master branch from the remote location origin.
git pull origin master  |    = Git fetch origin + git merge master origin/master
git fetch origin  |    Get the changes from the remote location into the (hidden?) origin/master branch

Taken from https://github.com/Denyos/reflections/blob/master/lesson_3_reflections.txt