# What happens when you initialize a repository? Why do you need to do it?

When I initialize a repository, I create a git file in the repository so that git can start tracking my changes and I can make commits.

# How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area includes only the files I want to add to a commit while the working directory contains all the files and the repository contains all the files, their history, and my commits.

It allows me to choose which files I want to include in a commit to make sure each commit has one logical change only. 

# How can you use the staging area to make sure you have one commit per logical change?

I can add only the files for the logical change into the staging area and commit only those files.

# What are some situations when branches would be helpful in keeping your history organized? How would branches help?

For example, when I want to experiment with several different ideas that are very different from each other. 
The branches can give me a good overview of all the experiments I'm running.

# How do the diagrams help you visualize the branch structure?

The diagrams show me where the branches are formed and which commits are on each branch.

# What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

We'll get all the changes made on the two branches.
We represent it that way because the master branch now contains commits from both branches.